{"version":3,"sources":["components/Header.js","components/Fret.js","components/String.js","components/Fretboard.js","App.js","index.js"],"names":["Header","openMenu","setOpenMenu","togglePitch","toggleAccidentals","toggleHideAccidentals","toggleHand","flattenPitch","changeTuningFromPreset","changeFretNums","tuningPreset","tuning","className","onClick","style","display","e","stopPropagation","type","name","id","onChange","defaultChecked","htmlFor","Fret","note","index","updateTuning","notesArray","string","focusedNote","highlightNotes","rightHanded","hideAccidentals","fretNumSettings","noteIndex","indexOf","clickNote","length","Array","from","includes","displayFretNum","backgroundColor","noteColor","String","openNoteIndex","openNote","useFlats","notesArrayFlat","notesArraySharp","fretNums","map","val","key","Fretboard","setTuning","useState","setFocusedNote","newNote","newTuning","App","setFlattenPitch","setUseFlats","setRightHanded","setHideAccidentals","setFretNumSettings","preset","fretSetting","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a02d9833.chunk.js","sourcesContent":["import React from 'react';\nimport './Header.css';\n\nfunction Header({\n  openMenu,\n  setOpenMenu,\n  togglePitch,\n  toggleAccidentals,\n  toggleHideAccidentals,\n  toggleHand,\n  flattenPitch,\n  changeTuningFromPreset,\n  changeFretNums,\n}) {\n  const tuningPreset = tuning => {\n    changeTuningFromPreset(tuning);\n  };\n\n  return (\n    <header>\n      <h1 className=\"header-title\">FretFinder</h1>\n\n      <div className=\"pitch-direction\">\n        <i\n          className={`fa ${\n            flattenPitch ? 'fa-arrow-circle-down' : 'fa-arrow-circle-up'\n          }`}\n          onClick={() => togglePitch()}\n        ></i>\n      </div>\n\n      <div className=\"settings\">\n        <i className=\"fa fa-cog\" onClick={() => setOpenMenu(!openMenu)}></i>\n        <div\n          className=\"settings-menu\"\n          onClick={() => setOpenMenu(false)}\n          style={{ display: openMenu ? 'flex' : 'none' }}\n        >\n          <div\n            className=\"menu-container\"\n            onClick={e => {\n              e.stopPropagation();\n            }}\n          >\n            <div className=\"menu-header\">\n              <h2>Settings</h2>\n            </div>\n\n            <div className=\"menu-item\">\n              <h3>Accidentals</h3>\n              <div className=\"radio-button\">\n                <input\n                  type=\"radio\"\n                  name=\"accidental\"\n                  id=\"flat\"\n                  onChange={() => toggleAccidentals()}\n                  defaultChecked\n                />\n                <label htmlFor=\"flat\">Flat</label>\n\n                <input\n                  type=\"radio\"\n                  name=\"accidental\"\n                  id=\"sharp\"\n                  onChange={() => toggleAccidentals()}\n                />\n                <label htmlFor=\"sharp\">Sharp</label>\n              </div>\n            </div>\n\n            <div className=\"menu-item\">\n              <h3>Hide Accidentals</h3>\n              <div className=\"radio-button\">\n                <input\n                  type=\"radio\"\n                  name=\"hide-accidental\"\n                  id=\"hide-acc\"\n                  onChange={() => toggleHideAccidentals()}\n                />\n                <label htmlFor=\"hide-acc\">Yes</label>\n\n                <input\n                  type=\"radio\"\n                  name=\"hide-accidental\"\n                  id=\"show-acc\"\n                  defaultChecked\n                  onChange={() => toggleHideAccidentals()}\n                />\n                <label htmlFor=\"show-acc\">No</label>\n              </div>\n            </div>\n\n            <div className=\"menu-item\">\n              <h3>Hand</h3>\n\n              <div className=\"radio-button\">\n                <input\n                  type=\"radio\"\n                  name=\"hand\"\n                  id=\"left\"\n                  onChange={() => toggleHand()}\n                />\n                <label htmlFor=\"left\">Left</label>\n\n                <input\n                  type=\"radio\"\n                  name=\"hand\"\n                  id=\"right\"\n                  defaultChecked\n                  onChange={() => toggleHand()}\n                />\n                <label htmlFor=\"right\">Right</label>\n              </div>\n            </div>\n\n            <div className=\"menu-item\">\n              <h3>Fret Numbers</h3>\n\n              <div className=\"radio-button\">\n                <input\n                  type=\"radio\"\n                  name=\"fret-nums\"\n                  id=\"fret-nums-all\"\n                  onChange={() => changeFretNums('all')}\n                />\n                <label htmlFor=\"fret-nums-all\">All</label>\n\n                <input\n                  type=\"radio\"\n                  name=\"fret-nums\"\n                  id=\"fret-nums-inlays\"\n                  defaultChecked\n                  onChange={() => changeFretNums('inlays')}\n                />\n                <label htmlFor=\"fret-nums-inlays\">Inlays</label>\n\n                <input\n                  type=\"radio\"\n                  name=\"fret-nums\"\n                  id=\"fret-nums-off\"\n                  onChange={() => changeFretNums('off')}\n                />\n                <label htmlFor=\"fret-nums-off\">Off</label>\n              </div>\n            </div>\n\n            <div className=\"menu-item\">\n              <h3>Tuning Presets</h3>\n\n              <div className=\"tuning-presets\">\n                <button\n                  type=\"button\"\n                  onClick={() => tuningPreset(['E', 'A', 'D', 'G', 'B', 'E'])}\n                >\n                  Standard\n                </button>\n                <button\n                  type=\"button\"\n                  onClick={() => tuningPreset(['D', 'A', 'D', 'G', 'B', 'E'])}\n                >\n                  Drop-D\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from 'react';\nimport './Fret.css';\n\nconst Fret = ({\n  note,\n  index,\n  updateTuning,\n  notesArray,\n  string,\n  flattenPitch,\n  focusedNote,\n  highlightNotes,\n  rightHanded,\n  hideAccidentals,\n  fretNumSettings,\n}) => {\n  const noteIndex = notesArray.indexOf(note);\n\n  const flattenNote = () => {\n    noteIndex === 0\n      ? updateTuning(string, notesArray[notesArray.length - 1])\n      : updateTuning(string, notesArray[noteIndex - 1]);\n  };\n\n  const sharpenNote = () => {\n    updateTuning(string, notesArray[(noteIndex + 1) % notesArray.length]);\n  };\n\n  const clickNote = () => {\n    if (index === 0) {\n      flattenPitch ? flattenNote() : sharpenNote();\n    } else {\n      highlightNotes(noteIndex);\n    }\n  };\n\n  const noteColor = () => {\n    switch (note) {\n      case 'C': {\n        return '#fd2424';\n      }\n      case 'D': {\n        return '#24fd48';\n      }\n      case 'E': {\n        return '#fd3fd4';\n      }\n      case 'F': {\n        return '#fde03f';\n      }\n      case 'G': {\n        return '#174fe9';\n      }\n      case 'A': {\n        return '#f58849';\n      }\n      case 'B': {\n        return '#09cbe0';\n      }\n      default: {\n        return 'white';\n      }\n    }\n  };\n\n  const noteDisplay = () => {\n    // Always display open notes\n    if (index === 0) {\n      return 'flex';\n    }\n\n    if (hideAccidentals && note.length >= 2) {\n      // Don't hide focused accidental after changing settings\n      if (focusedNote === noteIndex) {\n        return 'flex';\n      } else {\n        return 'none';\n      }\n    }\n\n    if (focusedNote === noteIndex || focusedNote === -1) {\n      return 'flex';\n    } else {\n      return 'none';\n    }\n  };\n\n  const displayFretNum = () => {\n    if (string !== 0 || index === 0) {\n      return;\n    } else if (\n      fretNumSettings === 'off' ||\n      (fretNumSettings === 'inlays' &&\n        !Array.from([3, 5, 7, 9, 12]).includes(index))\n    ) {\n      return;\n    }\n    return <div className=\"fret-num\">{index}</div>;\n  };\n\n  return (\n    <div className={rightHanded ? 'fret' : 'fret fret-left-handed'}>\n      {displayFretNum()}\n      <div\n        className=\"note\"\n        style={{\n          backgroundColor: noteColor(),\n          display: noteDisplay(),\n        }}\n        onClick={() => clickNote()}\n      >\n        {note}\n      </div>\n    </div>\n  );\n};\n\nexport default Fret;\n","import React from 'react';\nimport Fret from './Fret';\nimport './String.css';\n\nconst String = ({\n  openNote,\n  updateTuning,\n  string,\n  flattenPitch,\n  useFlats,\n  focusedNote,\n  highlightNotes,\n  rightHanded,\n  hideAccidentals,\n  fretNumSettings,\n}) => {\n  const fretNums = 12;\n  const notesArrayFlat = [\n    'C',\n    'Db',\n    'D',\n    'Eb',\n    'E',\n    'F',\n    'Gb',\n    'G',\n    'Ab',\n    'A',\n    'Bb',\n    'B',\n  ];\n  const notesArraySharp = [\n    'C',\n    'C#',\n    'D',\n    'D#',\n    'E',\n    'F',\n    'F#',\n    'G',\n    'G#',\n    'A',\n    'A#',\n    'B',\n  ];\n  const notesArray = useFlats ? notesArrayFlat : notesArraySharp;\n  let note = openNote;\n  let openNoteIndex;\n\n  return (\n    <div className={rightHanded ? 'string' : 'string string-left-handed'}>\n      {[...Array(fretNums + 1)].map((val, index) => {\n        // Open Note\n        if (index === 0) {\n          // Find position of note when switching between accidental types\n          note.includes('#')\n            ? (openNoteIndex = notesArraySharp.indexOf(note))\n            : (openNoteIndex = notesArrayFlat.indexOf(note));\n\n          note = notesArray[openNoteIndex];\n        } else {\n          const noteIndex = notesArray.indexOf(note);\n          note = notesArray[(noteIndex + 1) % notesArray.length];\n        }\n\n        return (\n          <Fret\n            note={note}\n            index={index}\n            key={index}\n            string={string}\n            updateTuning={updateTuning}\n            notesArray={notesArray}\n            flattenPitch={flattenPitch}\n            focusedNote={focusedNote}\n            highlightNotes={highlightNotes}\n            rightHanded={rightHanded}\n            hideAccidentals={hideAccidentals}\n            fretNumSettings={fretNumSettings}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default String;\n","import React, { useState } from 'react';\nimport String from './String';\nimport './Fretboard.css';\n\nconst Fretboard = ({\n  flattenPitch,\n  useFlats,\n  rightHanded,\n  hideAccidentals,\n  tuning,\n  setTuning,\n  fretNumSettings,\n}) => {\n  const [focusedNote, setFocusedNote] = useState(-1);\n\n  const updateTuning = (string, newNote) => {\n    const newTuning = [...tuning];\n    newTuning[string] = newNote;\n    setTuning(newTuning);\n  };\n\n  const highlightNotes = note => {\n    setFocusedNote(note);\n\n    // Reset highlight after clicking twice\n    if (note === focusedNote) {\n      setFocusedNote(-1);\n    }\n  };\n  return (\n    <section className={rightHanded ? 'fretboard' : 'fretboard left-handed'}>\n      {tuning.map((val, index) => (\n        <String\n          openNote={val}\n          key={index}\n          string={index}\n          updateTuning={updateTuning}\n          flattenPitch={flattenPitch}\n          useFlats={useFlats}\n          focusedNote={focusedNote}\n          highlightNotes={highlightNotes}\n          rightHanded={rightHanded}\n          hideAccidentals={hideAccidentals}\n          fretNumSettings={fretNumSettings}\n        />\n      ))}\n    </section>\n  );\n};\n\nexport default Fretboard;\n","import React, { useState } from 'react';\nimport Header from './components/Header';\nimport Fretboard from './components/Fretboard';\nimport 'font-awesome/css/font-awesome.min.css';\nimport './App.css';\n\nconst App = () => {\n  const initialTuning = ['E', 'A', 'D', 'G', 'B', 'E'];\n  const [flattenPitch, setFlattenPitch] = useState(true);\n  const [openMenu, setOpenMenu] = useState(false);\n  const [useFlats, setUseFlats] = useState(true);\n  const [rightHanded, setRightHanded] = useState(true);\n  const [hideAccidentals, setHideAccidentals] = useState(false);\n  const [tuning, setTuning] = useState(initialTuning);\n  const [fretNumSettings, setFretNumSettings] = useState('inlays');\n\n  const togglePitch = () => {\n    setFlattenPitch(!flattenPitch);\n  };\n\n  const toggleAccidentals = () => {\n    setUseFlats(!useFlats);\n  };\n\n  const toggleHideAccidentals = () => {\n    setHideAccidentals(!hideAccidentals);\n  };\n\n  const toggleHand = () => {\n    setRightHanded(!rightHanded);\n  };\n\n  const changeTuningFromPreset = preset => {\n    setTuning(preset);\n  };\n\n  const changeFretNums = fretSetting => {\n    setFretNumSettings(fretSetting);\n  };\n\n  return (\n    <div className=\"App\">\n      <Header\n        openMenu={openMenu}\n        setOpenMenu={setOpenMenu}\n        togglePitch={togglePitch}\n        toggleAccidentals={toggleAccidentals}\n        toggleHideAccidentals={toggleHideAccidentals}\n        toggleHand={toggleHand}\n        flattenPitch={flattenPitch}\n        changeTuningFromPreset={changeTuningFromPreset}\n        changeFretNums={changeFretNums}\n      />\n      <main>\n        <Fretboard\n          flattenPitch={flattenPitch}\n          useFlats={useFlats}\n          rightHanded={rightHanded}\n          hideAccidentals={hideAccidentals}\n          tuning={tuning}\n          setTuning={setTuning}\n          fretNumSettings={fretNumSettings}\n        />\n      </main>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}